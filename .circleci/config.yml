version: 2
jobs:
    build_run_docker_test:
        docker:
            - image: hbclab/intervention-outcomes-env:v1.0.0
        working_directory: /home/coder/projects
        steps:
            - checkout
            
            - run:
                name: validate and deploy application (testing)
                no_output_timeout: 60m
                command: |
                    source activate io
                    echo $CREDENTIALS > /home/coder/projects/validation/credentials.json
                    /home/coder/projects/validation/run.sh $DOCID $NAME_ACC $TOKEN_ACC $SECRET_ACC $APPID_DEPLOY $APPNAME_DEPLOY
    build_run_docker_prod:
        docker:
            - image: hbclab/intervention-outcomes-env:v1.0.0
        working_directory: /home/coder/projects
        steps:
            - checkout
            - run:
                name: validate and deploy application (production)
                no_output_timeout: 60m
                command: |
                    source activate io
                    echo $CREDENTIALS > /home/coder/projects/validation/credentials.json
                    /home/coder/projects/validation/run.sh $DOCID $NAME_ACC $TOKEN_ACC $SECRET_ACC $APPID_DEPLOY_PROD $APPNAME_DEPLOY_PROD
            - run:
                name: add and commit files
                command: |
                    git config credential.helper 'cache --timeout=120'
                    git config user.email "helper@help.com"
                    git config user.name "QA Bot"
                          
                    # check to see if there were any changes to the repository.
                    if [ -z "$(git ls-files --other --exclude-standard --directory)" ]; then
                        echo "No files to be committed!"
                    else
                        # Push quietly to prevent showing the token in log
                        git add .
                        git commit -m "[skip ci] $(date)"
                        git push -q https://${GITHUB_TOKEN}@github.com/HBClab/BetterTaskSwitch.git master
                    fi
workflows:
    version: 2
    build_run_test:
        jobs:
            - build_run_docker_test:
                filters:
                    branches:
                        ignore:
                            - master
    weekly_data_update:
        jobs:
            - build_run_docker_prod
        triggers:
            - schedule:
                cron: "0 0 * * 0"
                filters:
                    branches:
                        only:
                            - master